链接：https://ac.nowcoder.com/acm/contest/91435/1010
来源：牛客网
牛牛在玩一款游戏，这款游戏的地图可以被看作是一个 𝑛行 m 列的方格图，每个格子上都有一个数字，第 𝑖行第 j 列的格子上的数Col i,j
当牛牛处于某个格子上时，他会把所有和当前格子上数字相等的格子（包含当前格子）都标记牛牛可以朝上下左右任意一个方向走一步，花费的代价是 1
牛牛可以从当前位置传送到任意一个已经被标记了的格子上，花费的代价是 0
游戏开始时牛牛可以选择方格上任何一个格子作为起点（这一步的代价也是 1），他想知道若到每个格子至少一次他需要花费的最少代价是多少。
输入描述:本题采用多组案例输入，第一行一个整数 𝑇代表案例组数

题解
#include <iostream>
using namespace std;
#define N 200001
int main(){
	int t;
	cin>>t;
	for(int i=0;i<t;i++){
		int n,m,num;
		int sum=0;
		cin>>n>>m;
		int a[N]={0};
		for(int j=0;j<n*m;j++){
			cin>>num;
			if(a[num]==0){
				a[num]=1;
				sum++;
			}
		}
		cout<<sum<<endl;
	}
}
