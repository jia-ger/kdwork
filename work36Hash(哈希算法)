这道题实际上是哈希表的模板题。每读入一个数，就判断在哈希表中是否重复了。如果出现了重复，就直接退出，继续读入下一个数。否则，就将这个数插入哈希表中，并输出该数即可。
需要注意的一点是，哈希函数如果直接写成 H⁡(x)=x mod P的话会出现上文中说的负数下标，所以正确的写法是 H⁡(x)=(x mod P+P) mod P

Code：
#include <bits/stdc++.h>
using namespace std;
const int P=50021;
#define int long long
struct node {int v,nxt;}rec[10+P];
int hd[10+P],n;
namespace HASH {
int tot;
int H(int x) {return (x%P+P)%P;}
bool add(int x, int v) {
	for (int i=hd[x];i;i=rec[i].nxt) if (rec[i].v==v) return false;
	rec[++tot].v=v;
	rec[tot].nxt=hd[x];
	hd[x]=tot;
	return true;
}
}
using HASH::tot;
using HASH::H;
using HASH::add;
void rd(int&),wt(int);
#undef int
int main() {
#define int long long
	int T;rd(T);
	while(T--) {
		tot=0;memset(rec,0,sizeof rec);memset(hd,0,sizeof hd);rd(n);
		while (n--) {
			int x;rd(x);
			if (add(H(x),x)) wt(x),putchar(' ');
		}
		puts("");
	}
	return 0;
}
void rd(int& x) {
	x=0;int f=1;char ch=getchar();
	while (!isdigit(ch)) (ch=='-')&&(f=-1),ch=getchar();
	while (isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();
	x*=f;
}
void wt(int x) {
	(x<0)&&(x=-x,putchar('-'));
	if (x>9) wt(x/10);putchar(x%10^48);
}
