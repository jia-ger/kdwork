有一个 1 到 n 的排列，我们按照某种给定顺序依次删除每一个数，每删除一个数，小明将会获得这个数左边的数加上这个数右边的数这么多经验值，
需要注意删除一个数后它左右两边的数就直接相连了，如果一个数左边或者右边没有数，那么从这一边获得的经验值为 0 
现在给定最原始的排列和小明删除数字的顺序，请你帮小明算一下他最后能获得的总经验值是多少。
输入格式
第一行一个整数
n(1≤n≤10^5)
第二行 
n 个整数，p1 ,p2, ..., pn 表示最原始的排列。
第三行 
n 个整数，d1d2 , ..., d n ；di​ 表示小明第i次删除数字di 。
输出格式
输出一行，包含一个整数，表示答案。
样例
3
1 2 3
3 1 2
结果
4

题解
#include<bits/stdc++.h>
using namespace std;
#define itn int 
#define icn cin
#define int long long

const int N=1e6+10;
int a[N],l[N],r[N];

signed main() {
    int n;cin>>n;
	for(int i=1;i<=n;i++) 
	scanf("%lld",&a[i]);
	for(int i=1;i<=n;i++) 
	{
	r[a[i]]=a[i+1];
	l[a[i]]=a[i-1];}
	itn x,ans=0;
	
	for(int i=1;i<=n;i++)
	{ cin>>x;
	  ans+=r[x]+l[x];	
	  r[l[x]]=r[x];
	  l[r[x]]=l[x];	
		
	}
	cout<<ans;
    return 0;
}
