https://codeforces.com/gym/104369/problem/K

#include <bits/stdc++.h>
#define MAXN 6
#define MAXM 6
using namespace std;

int n, m, K, ans;
int MAP[MAXN + 5][MAXM + 5];

void dfs(int now) {
    ans = min(ans, now);
    for (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++) if (MAP[i][j]) {
        if (i > 1 && i < n) {
            // 向下跳
            if (MAP[i - 1][j] && !MAP[i + 1][j]) {
                MAP[i - 1][j] = MAP[i][j] = 0;
                MAP[i + 1][j] = 1;
                dfs(now - 1);
                MAP[i - 1][j] = MAP[i][j] = 1;
                MAP[i + 1][j] = 0;
            }

            // 向上跳
            if (!MAP[i - 1][j] && MAP[i + 1][j]) {
                MAP[i + 1][j] = MAP[i][j] = 0;
                MAP[i - 1][j] = 1;
                dfs(now - 1);
                MAP[i + 1][j] = MAP[i][j] = 1;
                MAP[i - 1][j] = 0;
            }
        }

        if (j > 1 && j < m) {
            // 向右跳
            if (MAP[i][j - 1] && !MAP[i][j + 1]) {
                MAP[i][j - 1] = MAP[i][j] = 0;
                MAP[i][j + 1] = 1;
                dfs(now - 1);
                MAP[i][j - 1] = MAP[i][j] = 1;
                MAP[i][j + 1] = 0;
            }

            // 向左跳
            if (!MAP[i][j - 1] && MAP[i][j + 1]) {
                MAP[i][j + 1] = MAP[i][j] = 0;
                MAP[i][j - 1] = 1;
                dfs(now - 1);
                MAP[i][j + 1] = MAP[i][j] = 1;
                MAP[i][j - 1] = 0;
            }
        }
    }
}

void solve() {
    scanf("%d%d%d", &n, &m, &K);
    memset(MAP, 0, sizeof(MAP));
    for (int i = 1; i <= K; i++) {
        int x, y; scanf("%d%d", &x, &y);
        MAP[x][y] = 1;
    }
    ans = K; dfs(K);
    printf("%d\n", ans);
}

int main() {
    int tcase; scanf("%d", &tcase);
    while (tcase--) solve();
    return 0;
}
