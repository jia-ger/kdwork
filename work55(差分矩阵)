输入一个 n行 m列的整数矩阵，再输入 q 个操作，每个操作包含五个整数 x1,y1,x2,y2,c，其中 (x1,y1) 和 (x2,y2) 表示一个子矩阵的左上角坐标和右下角坐标。
每个操作都要将选中的子矩阵中的每个元素的值加上 c。请你将进行完所有操作后的矩阵输出。
输入格式  第一行包含整数 n,m,q接下来 n 行，每行包含 m 个整数，表示整数矩阵。接下来 q行，每行包含 5个整数 x1,y1,x2,y2,c，表示一个操作。
输出格式  共 n 行，每行 m 个整数，表示所有操作进行完毕后的最终矩阵。


#include<bits/stdc++.h>
using namespace std;
#define itn int 
const int N=1010;
int a[N][N],b[N][N];
//a是原数组  b是差分数组
void insert(int x1,int y1,int x2,int y2,int c)
{
	b[x1][y1]+=c;
	b[x2+1][y1]-=c;
	b[x1][y2+1]-=c;
	b[x2+1][y2+1]+=c;
	
}


int main()
{   itn n,m,q;cin>>n>>m>>q;
    for(int i=1;i<=n;i++)
	for(itn j=1;j<=m;j++)
	 {	 cin>>a[i][j];insert(i,j,i,j,a[i][j]);}
	
	for(itn i=1;i<=q;i++)
	{
		int x1,y1,x2,y2,c;
		cin>>x1>>y1>>x2>>y2>>c;
		insert(x1,y1,x2,y2,c);
				
	}
	for(int i=1;i<=n;i++)
	for(itn j=1;j<=m;j++)
	{	
		b[i][j]+=b[i-1][j]+b[i][j-1]-b[i-1][j-1];	
	}
	for(int i=1;i<=n;i++)
	{
	for(itn j=1;j<=m;j++)
	 cout<<b[i][j]<<" ";
	 
	 cout<<endl;
    }
	return 0;
} 
